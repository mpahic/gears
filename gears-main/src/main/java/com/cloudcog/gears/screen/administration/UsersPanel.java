package com.cloudcog.gears.screen.administration;

import com.cloudcog.gears.util.DataResources;
import com.cloudcog.gears.util.ImageResource;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.sqlcontainer.SQLContainer;
import com.vaadin.data.util.sqlcontainer.query.TableQuery;
import com.vaadin.server.Sizeable.Unit;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalSplitPanel;
import com.vaadin.ui.ListSelect;
import com.vaadin.ui.MenuBar;
import com.vaadin.ui.TabSheet;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

public class UsersPanel extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private static final long serialVersionUID = 5327217539134717144L;
	
	@AutoGenerated
	private HorizontalSplitPanel mainLayout;
	@AutoGenerated
	private HorizontalSplitPanel mainSplitPane;
	@AutoGenerated
	private MenuBar userMenu;
	@AutoGenerated
	private TabSheet tabOptions;
	@AutoGenerated
	private AbsoluteLayout tabProperties;
	@AutoGenerated
	private AbsoluteLayout tabGroups;
	@AutoGenerated
	private TextArea txtAddress;
	@AutoGenerated
	private TextField txtLastName;
	@AutoGenerated
	private TextField txtFirstName;
	@AutoGenerated
	private TextField txtPassword;
	@AutoGenerated
	private TextField txtUsername;
	@AutoGenerated
	private MenuBar optionsBar;
	@AutoGenerated
	private ListSelect userList;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public UsersPanel() {
		buildMainLayout();
		setCompositionRoot(buildMainSplitPane());

		// TODO add user code here
		TableQuery tq;
		try {
			tq = new TableQuery("User", DataResources.getConnectionPool());
			SQLContainer container = new SQLContainer(tq);
			userList.setContainerDataSource(container);
			userList.setItemCaptionPropertyId("username");
			
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}

	@AutoGenerated
	private HorizontalSplitPanel buildMainLayout() {
		this.setWidth("100.0%");
		this.setHeight("100.0%");
		return buildMainSplitPane();
	}

	@AutoGenerated
	private HorizontalSplitPanel buildMainSplitPane() {
		// common part: create layout
		mainSplitPane = new HorizontalSplitPanel();
		mainSplitPane.setImmediate(false);
		mainSplitPane.setWidth("100.0%");
		mainSplitPane.setHeight("100.0%");
		mainSplitPane.setSplitPosition(180, Unit.PIXELS);
		
		// leftLayout
		mainSplitPane.addComponent(buildLeftLayout());
		
		// rightLayout
		mainSplitPane.addComponent(buildRightLayout());
		
		return mainSplitPane;
	}

	@AutoGenerated
	private AbsoluteLayout buildLeftLayout() {

		AbsoluteLayout leftLayout = new AbsoluteLayout();
		leftLayout.setImmediate(false);
		leftLayout.setWidth("100.0%");
		leftLayout.setHeight("100.0%");

		// optionsBar
		optionsBar = new MenuBar();
		optionsBar.setImmediate(false);
		optionsBar.setWidth("100.0%");
		optionsBar.addItem("Add", ImageResource.getResource(ImageResource.PLUS_16), null);
		optionsBar.addItem("Remove", ImageResource.getResource(ImageResource.MINUS_16), null);
		leftLayout.addComponent(optionsBar, "top:0px;right:0px;");
		
		// userList
		userList = new ListSelect();
		userList.setImmediate(false);
		userList.setWidth("100.0%");
		userList.setHeight("100.0%");
		leftLayout.addComponent(userList, "top:24.0px;right:0.0px;");
		
		return leftLayout;
	}

	@AutoGenerated
	private AbsoluteLayout buildRightLayout() {
		// common part: create layout
		AbsoluteLayout rightLayout = new AbsoluteLayout();
		rightLayout.setImmediate(false);
		rightLayout.setWidth("100.0%");
		rightLayout.setHeight("100.0%");

		// userMenu
		userMenu = new MenuBar();
		userMenu.setImmediate(false);
		userMenu.setWidth("100.0%");
		userMenu.setHeight("-1px");
		userMenu.addItem("Save", ImageResource.getResource(ImageResource.PLUS_16), null);
		userMenu.addItem("Cancel", ImageResource.getResource(ImageResource.MINUS_16), null);
		rightLayout.addComponent(userMenu);
		
		// txtUsername
		txtUsername = new TextField("Username");
		txtUsername.setImmediate(false);
		txtUsername.setWidth("-1px");
		txtUsername.setHeight("-1px");
		rightLayout.addComponent(txtUsername);
		
		// txtPassword
		txtPassword = new TextField("Password");
		txtPassword.setImmediate(false);
		txtPassword.setWidth("-1px");
		txtPassword.setHeight("-1px");
		rightLayout.addComponent(txtPassword);
		
		// txtFirstName
		txtFirstName = new TextField("First name");
		txtFirstName.setImmediate(false);
		txtFirstName.setWidth("-1px");
		txtFirstName.setHeight("-1px");
		rightLayout.addComponent(txtFirstName);
		
		// txtLastName
		txtLastName = new TextField("Last name");
		txtLastName.setImmediate(false);
		txtLastName.setWidth("-1px");
		txtLastName.setHeight("-1px");
		rightLayout.addComponent(txtLastName);
		
		// txtAddress
		txtAddress = new TextArea("Address");
		txtAddress.setImmediate(false);
		txtAddress.setWidth("-1px");
		txtAddress.setHeight("-1px");
		rightLayout.addComponent(txtAddress);
		
		// tabOptions
		tabOptions = buildTabOptions();
		rightLayout.addComponent(tabOptions);
		
		
		return rightLayout;
	}

	@AutoGenerated
	private TabSheet buildTabOptions() {
		// common part: create layout
		tabOptions = new TabSheet();
		tabOptions.setImmediate(true);
		tabOptions.setWidth("-1px");
		tabOptions.setHeight("-1px");
		
		// tabGroups
		tabGroups = new AbsoluteLayout();
		tabGroups.setImmediate(false);
		tabGroups.setWidth("-1px");
		tabGroups.setHeight("-1px");
		tabOptions.addTab(tabGroups, "Tab", null);
		
		// tabProperties
		tabProperties = new AbsoluteLayout();
		tabProperties.setImmediate(false);
		tabProperties.setWidth("-1px");
		tabProperties.setHeight("-1px");
		tabOptions.addTab(tabProperties, "Tab", null);
		
		return tabOptions;
	}

}
